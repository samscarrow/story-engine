export VENV_HOME="${VENV_HOME:-$HOME/.venvs}"
slug=$(basename "$PWD" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g; s/^-+|-+$//g')
pyver=$(python3 -c "import sys; print('%d.%d' % (sys.version_info.major, sys.version_info.minor))")
export VENV_PATH="${VENV_HOME}/${slug}-py${pyver}"
[ -d "$VENV_PATH" ] || bash ./scripts/venv-create.sh
export VIRTUAL_ENV="$VENV_PATH"
PATH_add "$VENV_PATH/bin"
# ensure uv targets the active venv, not .venv
alias uv='command uv --active'

# ---- Oracle DB environment (optional, no secrets committed) ----
# If a local .env.oracle file exists, source it so scripts can read
# ORACLE_USER, ORACLE_PASSWORD, and ORACLE_DSN. This keeps credentials
# out of the repo while enabling direct DSN connections (e.g. mainbase_high).
if [ -f ".env.oracle" ]; then
  # Export all variables defined in .env.oracle
  set -a
  . ./.env.oracle
  set +a
fi

# Sensible fallback: if ORACLE_DSN is unset but you have wallet path and host
# in env, construct a direct Easy Connect Plus DSN for mainbase_high.
# Users can override by setting ORACLE_DSN explicitly in .env.oracle.
if [ -z "${ORACLE_DSN:-}" ] && [ -n "${ADB_HOST:-}" ] && [ -n "${ADB_SERVICE:-}" ] && [ -n "${ADB_WALLET_DIR:-}" ]; then
  # ADB_SERVICE should be the full service name, e.g.
  # gfca71b2aacce62_mainbase_high.adb.oraclecloud.com
  export ORACLE_DSN="tcps://${ADB_HOST}:1522/${ADB_SERVICE}?wallet_location=${ADB_WALLET_DIR}&ssl_server_dn_match=true&retry_count=20&retry_delay=3"
fi
